name: CI

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Test Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup MySQL And Redis
        run: docker-compose up -d

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -Plocal
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SEND_MAIL_TO: ${{ secrets.AWS_SEND_MAIL_TO }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ISSUER_URI: ${{ secrets.ISSUER_URI }}
          SPRING_REDIS_HOST: ${{ secrets.SPRING_REDIS_HOST }}
          SPRING_REDIS_PORT: ${{ secrets.SPRING_REDIS_PORT }}


      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
